pipeline {
    agent {
        label 'master'
    }
    options {
        // хранить логи последних 10 сборок и артефакты последних 10 сборок
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        // в графическом интерфейсе видеть временные отметки
        timestamps()
    }
    tools {nodejs "nodejs"}
    stages {
      stage('Check environment') {
            steps {
                sh  '''
                    node -v
                    npm -v
                    quasar -v
                    '''
            }
        }
        stage('Install') {
            steps {
                sh 'npm install'
            }
        }
        stage('Build') {
            steps {
                sh 'quasar build'
            }
        }
        stage('Deliver') {
            steps {
                sh  'cp -a dist/spa/. /var/www/vue/winner-picker'
            }
        }
    }
    post {
         success {
            withCredentials([string(credentialsId: 'WinnerPickerTelegramBotToken', variable: 'TOKEN'), string(credentialsId: 'TelegramChatId', variable: 'CHAT_ID')]) {
            sh  ("""
                curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*
                Branch: *${env.GIT_BRANCH}*
                Build: *OK*
                Published: *YES*'
            """)
            }
         }

         aborted {
            withCredentials([string(credentialsId: 'WinnerPickerTelegramBotToken', variable: 'TOKEN'), string(credentialsId: 'TelegramChatId', variable: 'CHAT_ID')]) {
            sh  ("""
                curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*
                Branch: *${env.GIT_BRANCH}*
                Build: `Aborted`
                Published: `Aborted`'
            """)
            }

         }
         failure {
            withCredentials([string(credentialsId: 'WinnerPickerTelegramBotToken', variable: 'TOKEN'), string(credentialsId: 'TelegramChatId', variable: 'CHAT_ID')]) {
            sh  ("""
                curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*
                Branch: *${env.GIT_BRANCH}*
                Build: *FAIL*
                Published: *NO*'
            """)
            }
         }

     }
}
